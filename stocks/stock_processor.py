# -*- coding: utf-8 -*-
"""Yahoo_Stock_Prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CbA4lXxgG5gIPTFgLEDqNuPylD6Co_HY
"""

from utils.utils import setup_logging
import matplotlib.pyplot as plt
import pandas as pd
import os
from utils.stock_utils import train_model, ingest_stocks, prepare_data_for_training
from utils.mysql_utils import read_dataframe_from_table
import logging
import time

def setup():
  if not os.path.exists("./logs"):
    os.mkdir("./logs")

  setup_logging("./logs/stock_processor.log")

if __name__ == "__main__":
  setup()
  stocks = ["BTC-USD", "GC=F"]
  print(ingest_stocks(stock_symbols=stocks))
  try:
    stock_symbol = stocks[1]
    
    logging.info(f"Prepare {stock_symbol} stock data for model training")
    stock_df = read_dataframe_from_table(stock_symbol)
    X, y = prepare_data_for_training(stock_df=stock_df,
                                     window=7,
                                     target_colum_name="Close")
    logging.info(f"Prepare {stock_symbol} stock data for model training completed")

    logging.info(f"Training model ......")
    t1 = time.time()
    train_model(X=X, y=y)
    t2 = time.time()
    logging.info(f"Training model completed")
    logging.info(f"Training time -> {t2-t1} seconds")
  except Exception as err:
    print(err)


# data = stock_data[["Close"]]
# data = data.rename(columns={"Close": "Price"})
# data

# data["P5"] = data["Price"].rolling(5).mean()
# data["P7"] = data["Price"].rolling(7).mean()
# data.head(15)

# data = data.dropna()
# data